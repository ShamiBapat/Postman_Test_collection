{
	"info": {
		"_postman_id": "2f803d1b-797d-4d8e-b038-78acc23c2f1a",
		"name": "Test_Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25671122",
		"_collection_link": "https://interstellar-space-608133.postman.co/workspace/My-Workspace~cb3b8e98-7cad-4d15-8eac-ffdf9320f0d5/collection/25671122-2f803d1b-797d-4d8e-b038-78acc23c2f1a?action=share&source=collection_link&creator=25671122"
	},
	"item": [
		{
			"name": "Get All Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response Body Validation\",function(){\r",
							"    pm.expect(pm.response.text()).to.include(\"avatar\");\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL_Practise}}api/users?page=2",
					"host": [
						"{{baseURL_Practise}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_No_UserFound",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Invalid user\",function(){\r",
							"    pm.expect(pm.response.status).eql(\"Not Found\");\r",
							"});\r",
							"pm.test(\"User not found\",function(){\r",
							"    pm.expect(pm.response.code).equal(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseURL_Practise}}api/users/23",
					"host": [
						"{{baseURL_Practise}}api"
					],
					"path": [
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "datadrivenJSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"pm.test(\"Record creation validation\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"createdAt\");\r",
							"});\r",
							"pm.test(\"Content type header present\", function() {\r",
							"    pm.expect(pm.response.to.have.header(\"Content-type\"));\r",
							"});\r",
							"pm.test(\"Content type header validation\", function(){\r",
							"    pm.expect(pm.response.headers.get(\"Content-type\")).to.eql(\"application/json; charset=utf-8\");\r",
							"});\r",
							"tests[\"Verify Email\"]=responseBody.has(\"email\");\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"{{password}}\"\r\n}"
				},
				"url": {
					"raw": "https://reqres.in/api/register/prepod",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"register",
						"prepod"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User updated\",function(){\r",
							"    pm.expect(pm.response.code).eql(200);\r",
							"});\r",
							"pm.test(\"User validation\",function(){\r",
							"    pm.expect(pm.response.text()).to.include(\"updatedAt\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"shami\",\r\n    \"job\": \"SDET\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseURL_Practise}}api/users/2",
					"host": [
						"{{baseURL_Practise}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Deleted record\", function(){\r",
							"    pm.expect(pm.response.code).eql(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseURL_Practise}}api/users/2",
					"host": [
						"{{baseURL_Practise}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseURL_Practise",
			"value": "https://reqres.in/",
			"type": "string"
		}
	]
}